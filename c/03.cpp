/*Exercise number 02 from https://projecteuler.net/archives
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.*/
#include <iostream>
#include <math.h>
using namespace std;
bool checkPrime(int number) {
    if (number <= 1) return false;
    if (number == 2) return true;
    if (number%2 == 0) return false;

    for(unsigned long long i= 3; i < (number); i+=2){
        if(number % i == 0){
            return false;
        }

    }
    return true;
}

int  main() {
    unsigned long long number;
    cout << "Insert a number to calculate the max factor prime: \t";
    cin >> number;
    unsigned long long max = 0;
    for(long i = 1; i < (number); i++){
        if(number % i == 0 && checkPrime(i)){
            max = i;
            cout<< max << endl;

            if (i > sqrt(number)){break;};
        }
    }

    return 0;
}
